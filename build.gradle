buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
//        maven {
//            url = "https://repo.spongepowered.org/maven"
//        }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:6f53277"
//        classpath "com.github.xcfrg:MixinGradle:0.6-SNAPSHOT"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//apply plugin: "org.spongepowered.mixin"


version = "1.0"
group= "com.strafe.autogg" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "autogg"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "log4j-core"
    }
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")

    compileOnly 'org.jetbrains:annotations:16.0.2'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

//jar {
//    manifest.attributes(
//            'TweakClass': "org.spongepowered.asm.launch.MixinTweaker",
//            'MixinConfigs': 'mixins.STRAFE.json',
//            'ForceLoadAsMod': "true",
//            'FMLCorePluginContainsFMLMod': 'true',
//    )
//}
//
//mixin {
//    add sourceSets.main, "mixins.STRAFE.refmap.json"
//}

